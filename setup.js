#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Certificate Generator
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node setup.js
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(query) {
  return new Promise(resolve => rl.question(query, resolve));
}

async function setup() {
  console.log('üé´ –ù–ê–°–¢–†–û–ô–ö–ê CERTIFICATE GENERATOR');
  console.log('==================================');
  console.log('');
  console.log('–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–æ–¥ –≤–∞—à–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.');
  console.log('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ª—é–±—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–∂–∞–≤ Enter.');
  console.log('');

  // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ
  console.log('üìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–õ–ò–ï–ù–¢–ï:');
  const clientName = await question('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: ');
  const clientDescription = await question('–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–∞–ª–æ–Ω–∞ –∫—Ä–∞—Å–æ—Ç—ã"): ');
  const clientWebsite = await question('–°–∞–π—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ');

  console.log('');
  console.log('üìß –ù–ê–°–¢–†–û–ô–ö–ò EMAIL:');
  const emailAddress = await question('Gmail –∞–¥—Ä–µ—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: ');
  const senderName = clientName || await question('–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –≤ –ø–∏—Å—å–º–∞—Ö: ');

  console.log('');
  console.log('üé® –®–ê–ë–õ–û–ù –°–ï–†–¢–ò–§–ò–ö–ê–¢–ê:');
  const templateId = await question('ID —à–∞–±–ª–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "bella-salon-001"): ');
  const templateName = await question('–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞: ');

  console.log('');
  console.log('üîë –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:');
  const apiKey = await question('API –∫–ª—é—á (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏): ') || 
                 `${clientName?.toLowerCase().replace(/\s+/g, '-') || 'client'}-${Date.now()}-secret`;

  console.log('');
  console.log('üìä GOOGLE SHEETS:');
  const useGoogleSheets = (await question('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Google Sheets –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è? (y/n): ')).toLowerCase() === 'y';

  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const config = {
    client_info: {
      name: clientName || '–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
      description: clientDescription || '–ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã',
      website: clientWebsite || ''
    },
    email_settings: {
      gmail_address: emailAddress || 'your-gmail@gmail.com',
      gmail_app_password: '–ù–ê–°–¢–†–û–ô–¢–ï_–ü–ê–†–û–õ–¨_–ü–†–ò–õ–û–ñ–ï–ù–ò–Ø',
      sender_name: senderName || clientName || 'Certificate Generator',
      subject_template: `–í–∞—à –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ {amount} —Ä—É–±.`
    },
    google_sheets: {
      enabled: useGoogleSheets,
      spreadsheet_id: useGoogleSheets ? '–ù–ê–°–¢–†–û–ô–¢–ï_ID_–¢–ê–ë–õ–ò–¶–´' : '',
      service_account_email: useGoogleSheets ? '–ù–ê–°–¢–†–û–ô–¢–ï_EMAIL_–°–ï–†–í–ò–°–ê' : '',
      private_key: useGoogleSheets ? '–ù–ê–°–¢–†–û–ô–¢–ï_–ü–†–ò–í–ê–¢–ù–´–ô_–ö–õ–Æ–ß' : ''
    },
    certificate_template: {
      template_id: templateId || 'client-template-001',
      template_name: templateName || '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–ª–∏–µ–Ω—Ç–∞',
      pdf_file_path: './templates/client-certificate.pdf',
      field_positions: {
        first_name: { x: 250, y: 515, fontSize: 20, color: '#000000' },
        last_name: { x: 350, y: 515, fontSize: 20, color: '#000000' },
        amount: { x: 275, y: 435, fontSize: 18, color: '#cc9900' },
        issue_date: { x: 180, y: 150, fontSize: 12, color: '#666666' },
        certificate_code: { x: 430, y: 150, fontSize: 10, color: '#666666' },
        message: { x: 100, y: 550, fontSize: 14, color: '#333333', maxWidth: 400 }
      }
    },
    tilda_integration: {
      webhook_url: '–ù–ê–°–¢–†–û–ô–¢–ï_–ü–û–°–õ–ï_–î–ï–ü–õ–û–Ø',
      api_key: apiKey,
      form_fields_mapping: {
        Name: 'first_name',
        Surname: 'last_name',
        Email: 'recipient_email',
        Sum: 'amount',
        Message: 'message'
      }
    },
    certificate_settings: {
      expiry_days: 365,
      default_message: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –ø–æ–¥–∞—Ä–æ—á–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞!',
      verification_enabled: true
    }
  };

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const configPath = path.join(__dirname, 'client-config.json');
  fs.writeFileSync(configPath, JSON.stringify(config, null, 2), 'utf8');

  // –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
  const envContent = `# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
NODE_ENV=development
PORT=3000

# API –∫–ª—é—á–∏
API_KEY=${apiKey}

# Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (Gmail)
EMAIL_USER=${emailAddress || 'your-gmail@gmail.com'}
EMAIL_PASS=–ù–ê–°–¢–†–û–ô–¢–ï_–ü–ê–†–û–õ–¨_–ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
EMAIL_FROM_NAME=${senderName || clientName || 'Certificate Generator'}

# Google Sheets (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
${useGoogleSheets ? `GOOGLE_SHEETS_PRIVATE_KEY="–ù–ê–°–¢–†–û–ô–¢–ï_–ü–†–ò–í–ê–¢–ù–´–ô_–ö–õ–Æ–ß"
GOOGLE_SHEETS_CLIENT_EMAIL=–ù–ê–°–¢–†–û–ô–¢–ï_EMAIL_–°–ï–†–í–ò–°–ê
GOOGLE_SHEETS_SPREADSHEET_ID=–ù–ê–°–¢–†–û–ô–¢–ï_ID_–¢–ê–ë–õ–ò–¶–´` : '# Google Sheets –æ—Ç–∫–ª—é—á–µ–Ω–æ'}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
CERTIFICATE_EXPIRY_DAYS=365
BASE_URL=http://localhost:3000

# –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
ADMIN_USER=admin
ADMIN_PASS=password`;

  const envPath = path.join(__dirname, '.env');
  fs.writeFileSync(envPath, envContent, 'utf8');

  console.log('');
  console.log('‚úÖ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
  console.log('======================');
  console.log('');
  console.log('üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:');
  console.log('  ‚úÖ client-config.json - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞');
  console.log('  ‚úÖ .env - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.log('');
  console.log('üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
  console.log('');
  console.log('1. üìß –ù–ê–°–¢–†–û–ô–¢–ï GMAIL:');
  console.log('   - –í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é');
  console.log('   - –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('   - –û–±–Ω–æ–≤–∏—Ç–µ EMAIL_PASS –≤ .env —Ñ–∞–π–ª–µ');
  console.log('');
  
  if (useGoogleSheets) {
    console.log('2. üìä –ù–ê–°–¢–†–û–ô–¢–ï GOOGLE SHEETS:');
    console.log('   - –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ Google Cloud Console');
    console.log('   - –í–∫–ª—é—á–∏—Ç–µ Google Sheets API');
    console.log('   - –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç');
    console.log('   - –û–±–Ω–æ–≤–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ');
    console.log('');
  }

  console.log('3. üé® –ü–û–î–ì–û–¢–û–í–¨–¢–ï –®–ê–ë–õ–û–ù:');
  console.log('   - –ü–æ–ª—É—á–∏—Ç–µ PDF —à–∞–±–ª–æ–Ω –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞');
  console.log('   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ –ø–∞–ø–∫—É templates/');
  console.log('');
  console.log('4. üöÄ –ó–ê–ü–£–°–¢–ò–¢–ï –õ–û–ö–ê–õ–¨–ù–û:');
  console.log('   npm start');
  console.log('');
  console.log('5. üß™ –ü–†–û–¢–ï–°–¢–ò–†–£–ô–¢–ï:');
  console.log('   node quick-test.js');
  console.log('');
  console.log('6. üåê –î–ï–ü–õ–û–ô –ù–ê –°–ï–†–í–ï–†:');
  console.log('   –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –î–ï–ü–õ–û–ô-–ù–ê-–°–ï–†–í–ï–†.md');
  console.log('');
  console.log('üìñ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
  console.log('   - –ü–û–®–ê–ì–û–í–ê–Ø-–ò–ù–°–¢–†–£–ö–¶–ò–Ø.md - –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤');
  console.log('   - –ù–ê–°–¢–†–û–ô–ö–ê-–ö–õ–ò–ï–ù–¢–ê.md - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞');
  console.log('   - –î–ï–ü–õ–û–ô-–ù–ê-–°–ï–†–í–ï–†.md - –¥–µ–ø–ª–æ–π –∏ Tilda');
  console.log('');
  console.log('üéâ –£–¥–∞—á–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π!');

  rl.close();
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
const configExists = fs.existsSync(path.join(__dirname, 'client-config.json'));
const envExists = fs.existsSync(path.join(__dirname, '.env'));

if (configExists || envExists) {
  console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.');
  rl.question('–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∏—Ö? (y/n): ', (answer) => {
    if (answer.toLowerCase() === 'y') {
      setup();
    } else {
      console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
      rl.close();
    }
  });
} else {
  setup();
}
